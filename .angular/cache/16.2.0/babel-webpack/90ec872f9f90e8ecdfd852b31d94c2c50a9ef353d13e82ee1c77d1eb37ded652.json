{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuestionsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/audio/';\n  }\n  playQuestion(audioIndex) {\n    return this.http.get(this.apiUrl + audioIndex);\n  }\n}\n_class = QuestionsService;\n_class.ɵfac = function QuestionsService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["QuestionsService","constructor","http","apiUrl","playQuestion","audioIndex","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/timothyweidinger/Software Projects/codesmith/harmodevs/InterviewAsker/src/app/services/questions.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionsService {\n  private apiUrl = 'http://localhost:3000/api/audio/';\n  constructor(private http: HttpClient) {}\n\n  playQuestion(audioIndex: string | number) {\n    return this.http.get(this.apiUrl + audioIndex);\n  }\n}\n"],"mappings":";;;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAG,kCAAkC;EACZ;EAEvCC,YAAYA,CAACC,UAA2B;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,MAAM,GAAGE,UAAU,CAAC;EAChD;;SANWL,gBAAgB;;mBAAhBA,MAAgB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAhBV,MAAgB;EAAAW,OAAA,EAAhBX,MAAgB,CAAAY,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}